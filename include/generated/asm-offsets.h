#ifndef __ASM_OFFSETS_H__
#define __ASM_OFFSETS_H__
/*
 * DO NOT MODIFY.
 *
 * This file was generated by Kbuild
 */

#define TSK_ACTIVE_MM 828 /* offsetof(struct task_struct, active_mm)	@ */
#define TSK_STACK_CANARY 936 /* offsetof(struct task_struct, stack_canary)	@ */

#define TI_FLAGS 0 /* offsetof(struct thread_info, flags)	@ */
#define TI_PREEMPT 4 /* offsetof(struct thread_info, preempt_count)	@ */
#define TI_ADDR_LIMIT 8 /* offsetof(struct thread_info, addr_limit)	@ */
#define TI_TASK 12 /* offsetof(struct thread_info, task)	@ */
#define TI_CPU 16 /* offsetof(struct thread_info, cpu)	@ */
#define TI_CPU_DOMAIN 20 /* offsetof(struct thread_info, cpu_domain)	@ */
#define TI_CPU_SAVE 24 /* offsetof(struct thread_info, cpu_context)	@ */
#define TI_USED_CP 76 /* offsetof(struct thread_info, used_cp)	@ */
#define TI_TP_VALUE 92 /* offsetof(struct thread_info, tp_value)	@ */
#define TI_FPSTATE 104 /* offsetof(struct thread_info, fpstate)	@ */
#define TI_VFPSTATE 248 /* offsetof(struct thread_info, vfpstate)	@ */
#define VFP_CPU 272 /* offsetof(union vfp_state, hard.cpu)	@ */
#define TI_THUMBEE_STATE 528 /* offsetof(struct thread_info, thumbee_state)	@ */

#define S_R0 0 /* offsetof(struct pt_regs, ARM_r0)	@ */
#define S_R1 4 /* offsetof(struct pt_regs, ARM_r1)	@ */
#define S_R2 8 /* offsetof(struct pt_regs, ARM_r2)	@ */
#define S_R3 12 /* offsetof(struct pt_regs, ARM_r3)	@ */
#define S_R4 16 /* offsetof(struct pt_regs, ARM_r4)	@ */
#define S_R5 20 /* offsetof(struct pt_regs, ARM_r5)	@ */
#define S_R6 24 /* offsetof(struct pt_regs, ARM_r6)	@ */
#define S_R7 28 /* offsetof(struct pt_regs, ARM_r7)	@ */
#define S_R8 32 /* offsetof(struct pt_regs, ARM_r8)	@ */
#define S_R9 36 /* offsetof(struct pt_regs, ARM_r9)	@ */
#define S_R10 40 /* offsetof(struct pt_regs, ARM_r10)	@ */
#define S_FP 44 /* offsetof(struct pt_regs, ARM_fp)	@ */
#define S_IP 48 /* offsetof(struct pt_regs, ARM_ip)	@ */
#define S_SP 52 /* offsetof(struct pt_regs, ARM_sp)	@ */
#define S_LR 56 /* offsetof(struct pt_regs, ARM_lr)	@ */
#define S_PC 60 /* offsetof(struct pt_regs, ARM_pc)	@ */
#define S_PSR 64 /* offsetof(struct pt_regs, ARM_cpsr)	@ */
#define S_OLD_R0 68 /* offsetof(struct pt_regs, ARM_ORIG_r0)	@ */
#define PT_REGS_SIZE 72 /* sizeof(struct pt_regs)	@ */
#define SVC_DACR 72 /* offsetof(struct svc_pt_regs, dacr)	@ */
#define SVC_ADDR_LIMIT 76 /* offsetof(struct svc_pt_regs, addr_limit)	@ */
#define SVC_REGS_SIZE 80 /* sizeof(struct svc_pt_regs)	@ */

#define L2X0_R_PHY_BASE 0 /* offsetof(struct l2x0_regs, phy_base)	@ */
#define L2X0_R_AUX_CTRL 4 /* offsetof(struct l2x0_regs, aux_ctrl)	@ */
#define L2X0_R_TAG_LATENCY 8 /* offsetof(struct l2x0_regs, tag_latency)	@ */
#define L2X0_R_DATA_LATENCY 12 /* offsetof(struct l2x0_regs, data_latency)	@ */
#define L2X0_R_FILTER_START 16 /* offsetof(struct l2x0_regs, filter_start)	@ */
#define L2X0_R_FILTER_END 20 /* offsetof(struct l2x0_regs, filter_end)	@ */
#define L2X0_R_PREFETCH_CTRL 24 /* offsetof(struct l2x0_regs, prefetch_ctrl)	@ */
#define L2X0_R_PWR_CTRL 28 /* offsetof(struct l2x0_regs, pwr_ctrl)	@ */

#define MM_CONTEXT_ID 360 /* offsetof(struct mm_struct, context.id.counter)	@ */

#define VMA_VM_MM 32 /* offsetof(struct vm_area_struct, vm_mm)	@ */
#define VMA_VM_FLAGS 40 /* offsetof(struct vm_area_struct, vm_flags)	@ */

#define VM_EXEC 4 /* VM_EXEC	@ */

#define PAGE_SZ 4096 /* PAGE_SIZE	@ */

#define SYS_ERROR0 10420224 /* 0x9f0000	@ */

#define SIZEOF_MACHINE_DESC 104 /* sizeof(struct machine_desc)	@ */
#define MACHINFO_TYPE 0 /* offsetof(struct machine_desc, nr)	@ */
#define MACHINFO_NAME 4 /* offsetof(struct machine_desc, name)	@ */

#define PROC_INFO_SZ 52 /* sizeof(struct proc_info_list)	@ */
#define PROCINFO_INITFUNC 16 /* offsetof(struct proc_info_list, __cpu_flush)	@ */
#define PROCINFO_MM_MMUFLAGS 8 /* offsetof(struct proc_info_list, __cpu_mm_mmu_flags)	@ */
#define PROCINFO_IO_MMUFLAGS 12 /* offsetof(struct proc_info_list, __cpu_io_mmu_flags)	@ */

#define CPU_SLEEP_SIZE 36 /* offsetof(struct processor, suspend_size)	@ */
#define CPU_DO_SUSPEND 40 /* offsetof(struct processor, do_suspend)	@ */
#define CPU_DO_RESUME 44 /* offsetof(struct processor, do_resume)	@ */
#define SLEEP_SAVE_SP_SZ 8 /* sizeof(struct sleep_save_sp)	@ */
#define SLEEP_SAVE_SP_PHYS 4 /* offsetof(struct sleep_save_sp, save_ptr_stash_phys)	@ */
#define SLEEP_SAVE_SP_VIRT 0 /* offsetof(struct sleep_save_sp, save_ptr_stash)	@ */

#define DMA_BIDIRECTIONAL 0 /* DMA_BIDIRECTIONAL	@ */
#define DMA_TO_DEVICE 1 /* DMA_TO_DEVICE	@ */
#define DMA_FROM_DEVICE 2 /* DMA_FROM_DEVICE	@ */

#define CACHE_WRITEBACK_ORDER 6 /* __CACHE_WRITEBACK_ORDER	@ */
#define CACHE_WRITEBACK_GRANULE 64 /* __CACHE_WRITEBACK_GRANULE	@ */


#define VDSO_DATA_SIZE 4096 /* sizeof(union vdso_data_store)	@ */

#define EMIF_SDCFG_VAL_OFFSET 0 /* offsetof(struct emif_regs_amx3, emif_sdcfg_val)	@ */
#define EMIF_TIMING1_VAL_OFFSET 4 /* offsetof(struct emif_regs_amx3, emif_timing1_val)	@ */
#define EMIF_TIMING2_VAL_OFFSET 8 /* offsetof(struct emif_regs_amx3, emif_timing2_val)	@ */
#define EMIF_TIMING3_VAL_OFFSET 12 /* offsetof(struct emif_regs_amx3, emif_timing3_val)	@ */
#define EMIF_REF_CTRL_VAL_OFFSET 16 /* offsetof(struct emif_regs_amx3, emif_ref_ctrl_val)	@ */
#define EMIF_ZQCFG_VAL_OFFSET 20 /* offsetof(struct emif_regs_amx3, emif_zqcfg_val)	@ */
#define EMIF_PMCR_VAL_OFFSET 24 /* offsetof(struct emif_regs_amx3, emif_pmcr_val)	@ */
#define EMIF_PMCR_SHDW_VAL_OFFSET 28 /* offsetof(struct emif_regs_amx3, emif_pmcr_shdw_val)	@ */
#define EMIF_RD_WR_LEVEL_RAMP_CTRL_OFFSET 32 /* offsetof(struct emif_regs_amx3, emif_rd_wr_level_ramp_ctrl)	@ */
#define EMIF_RD_WR_EXEC_THRESH_OFFSET 36 /* offsetof(struct emif_regs_amx3, emif_rd_wr_exec_thresh)	@ */
#define EMIF_COS_CONFIG_OFFSET 40 /* offsetof(struct emif_regs_amx3, emif_cos_config)	@ */
#define EMIF_PRIORITY_TO_COS_MAPPING_OFFSET 44 /* offsetof(struct emif_regs_amx3, emif_priority_to_cos_mapping)	@ */
#define EMIF_CONNECT_ID_SERV_1_MAP_OFFSET 48 /* offsetof(struct emif_regs_amx3, emif_connect_id_serv_1_map)	@ */
#define EMIF_CONNECT_ID_SERV_2_MAP_OFFSET 52 /* offsetof(struct emif_regs_amx3, emif_connect_id_serv_2_map)	@ */
#define EMIF_OCP_CONFIG_VAL_OFFSET 56 /* offsetof(struct emif_regs_amx3, emif_ocp_config_val)	@ */
#define EMIF_LPDDR2_NVM_TIM_OFFSET 60 /* offsetof(struct emif_regs_amx3, emif_lpddr2_nvm_tim)	@ */
#define EMIF_LPDDR2_NVM_TIM_SHDW_OFFSET 64 /* offsetof(struct emif_regs_amx3, emif_lpddr2_nvm_tim_shdw)	@ */
#define EMIF_DLL_CALIB_CTRL_VAL_OFFSET 68 /* offsetof(struct emif_regs_amx3, emif_dll_calib_ctrl_val)	@ */
#define EMIF_DLL_CALIB_CTRL_VAL_SHDW_OFFSET 72 /* offsetof(struct emif_regs_amx3, emif_dll_calib_ctrl_val_shdw)	@ */
#define EMIF_DDR_PHY_CTLR_1_OFFSET 76 /* offsetof(struct emif_regs_amx3, emif_ddr_phy_ctlr_1)	@ */
#define EMIF_EXT_PHY_CTRL_VALS_OFFSET 80 /* offsetof(struct emif_regs_amx3, emif_ext_phy_ctrl_vals)	@ */
#define EMIF_REGS_AMX3_SIZE 560 /* sizeof(struct emif_regs_amx3)	@ */

#define EMIF_PM_BASE_ADDR_VIRT_OFFSET 0 /* offsetof(struct ti_emif_pm_data, ti_emif_base_addr_virt)	@ */
#define EMIF_PM_BASE_ADDR_PHYS_OFFSET 4 /* offsetof(struct ti_emif_pm_data, ti_emif_base_addr_phys)	@ */
#define EMIF_PM_CONFIG_OFFSET 8 /* offsetof(struct ti_emif_pm_data, ti_emif_sram_config)	@ */
#define EMIF_PM_REGS_VIRT_OFFSET 12 /* offsetof(struct ti_emif_pm_data, regs_virt)	@ */
#define EMIF_PM_REGS_PHYS_OFFSET 16 /* offsetof(struct ti_emif_pm_data, regs_phys)	@ */
#define EMIF_PM_DATA_SIZE 20 /* sizeof(struct ti_emif_pm_data)	@ */

#define EMIF_PM_SAVE_CONTEXT_OFFSET 0 /* offsetof(struct ti_emif_pm_functions, save_context)	@ */
#define EMIF_PM_RESTORE_CONTEXT_OFFSET 4 /* offsetof(struct ti_emif_pm_functions, restore_context)	@ */
#define EMIF_PM_ENTER_SR_OFFSET 8 /* offsetof(struct ti_emif_pm_functions, enter_sr)	@ */
#define EMIF_PM_EXIT_SR_OFFSET 12 /* offsetof(struct ti_emif_pm_functions, exit_sr)	@ */
#define EMIF_PM_ABORT_SR_OFFSET 16 /* offsetof(struct ti_emif_pm_functions, abort_sr)	@ */
#define EMIF_PM_FUNCTIONS_SIZE 20 /* sizeof(struct ti_emif_pm_functions)	@ */
#define AMX3_PM_WFI_FLAGS_OFFSET 0 /* offsetof(struct am33xx_pm_sram_data, wfi_flags)	@ */
#define AMX3_PM_L2_AUX_CTRL_VAL_OFFSET 4 /* offsetof(struct am33xx_pm_sram_data, l2_aux_ctrl_val)	@ */
#define AMX3_PM_L2_PREFETCH_CTRL_VAL_OFFSET 8 /* offsetof(struct am33xx_pm_sram_data, l2_prefetch_ctrl_val)	@ */
#define AMX3_PM_SRAM_DATA_SIZE 12 /* sizeof(struct am33xx_pm_sram_data)	@ */

#define AMX3_PM_RO_SRAM_DATA_VIRT_OFFSET 0 /* offsetof(struct am33xx_pm_ro_sram_data, amx3_pm_sram_data_virt)	@ */
#define AMX3_PM_RO_SRAM_DATA_PHYS_OFFSET 4 /* offsetof(struct am33xx_pm_ro_sram_data, amx3_pm_sram_data_phys)	@ */
#define AMX3_PM_RTC_BASE_VIRT_OFFSET 8 /* offsetof(struct am33xx_pm_ro_sram_data, rtc_base_virt)	@ */
#define AMX3_PM_RO_SRAM_DATA_SIZE 12 /* sizeof(struct am33xx_pm_ro_sram_data)	@ */

#endif
